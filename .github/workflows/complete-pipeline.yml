name: complete-pipeline

on:
  workflow_call:
  workflow_dispatch:
    inputs:
      targetPath:
        description: 'Target directory of build process.'
        required: false
        type: string
        default: './'


env:
  targetPath: ${{ github.event.inputs.targetPath || './' }}


jobs:
  Build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Build the application
        run: .github/workflows/scripts/build.sh

      - name: Archiving artifact
        run: pwd;ls -l;tar -cvf ./BuildOutput.tar -C ${{ env.targetPath }}/ .

      - name: Publish Artifact
        uses: actions/upload-artifact@v3
        with:
          name: BuildOutput
          path: ./BuildOutput.tar

  Test:
    name: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v2

      - name: Download artifact from build job (current workflow)
        uses: actions/download-artifact@v2
        id: dowloadFromSamePipeline
        continue-on-error: true
        with:
          name: BuildOutput
          path: ${{ env.targetPath }}

      - name: Download artifact from build workflow
        uses: dawidd6/action-download-artifact@v2
        id: downloadFromBuild
        continue-on-error: true
        if: ${{ steps.dowloadFromSamePipeline.outcome == 'failure' }}
        with:
          workflow: ${{ env.buildPipelineYamlName }}
          commit: ${{ github.sha }}
          check_artifacts:  true
          name: BuildOutput
          path: ${{ env.targetPath }}

      - name: Download artifact from CI workflow
        uses: dawidd6/action-download-artifact@v2
        if: ${{ steps.downloadFromBuild.outcome == 'failure' }}
        with:
          workflow: ${{ env.ciPipelineYamlName }}
          commit: ${{ github.sha }}
          check_artifacts:  true
          name: BuildOutput
          path: ${{ env.targetPath }}

      - name: Extracting archive
        run: tar -C ${{ env.targetPath }} -xf ${{ env.targetPath }}/BuildOutput.tar

      - name: Test
        run: .github/workflows/scripts/test.sh

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: '**/TEST-*.xml'
